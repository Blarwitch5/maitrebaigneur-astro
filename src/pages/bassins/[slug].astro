---
import { getCollection } from "astro:content";
import PoolLayout from "@layouts/PoolLayout.astro";
import Header from "@components/Header.astro";
import Footer from "@components/Footer.astro";
import PageTitle from "@components/header/PageTitle.astro";
import Main from "@components/Main.astro";
import SkipToContent from "@components/ui/SkipToContent.astro";
import { Icon } from "astro-icon";
import Title from "@components/ui/Title.astro";
// Generate a new path for every collection entry
export async function getStaticPaths() {
  const poolEntries = await getCollection("bassins");
  return poolEntries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// Get the entry directly from the prop on render
const { entry } = Astro.props;

const { Content } = await entry.render();

import site from "@assets/data/data.json";

const { siteLinks } = site;
const pools = siteLinks.pools;
---

<PoolLayout title={entry.data.metaTitle} description={entry.data.metaDesc}>
  <SkipToContent />
  <Header />
  <PageTitle
    pageTitle={entry.data.pool.name}
    pageImageUrlWebp={entry.data.pool.image.webp}
    pageImageUrl={entry.data.pool.image.jpg}
    pageImageAlt={entry.data.pool.image.alt}
  />

  <Main>
    <section class="single-pool">
      <div class="container">
        {
          entry.data.pool.name === "Domicile" ? (
            <Title animate level="2" class="single-pool__title">
              Maître-Baigneur à domicile, chez vous !
            </Title>
          ) : (
            <Title animate level="2" class="single-pool__title">
              Découvrez la piscine {entry.data.pool.name} à{" "}
              {entry.data.pool.location}
            </Title>
          )
        }

        <div class="single-pool__content">
          <div class="single-pool__desc" set:html={entry.data.pool.desc} />
          <div class="single-pool__details">
            <Title animate level="3">
              Informations concernant notre bassin à {entry.data.pool.name}
            </Title>
            <Title animate level="4">Prestations proposées</Title>
            <ul>
              {
                entry.data.pool.services.map(
                  (item: {
                    href: string | URL | null | undefined;
                    icon: any;
                    name: unknown;
                  }) => {
                    return (
                      <li>
                        <a href={item.href}>
                          <Icon name={item.icon} /> {item.name}
                        </a>
                      </li>
                    );
                  }
                )
              }
            </ul>
            <Title animate level="4">Sitution géographique</Title>
            <ul>
              <li>
                <a
                  href={`https://maps.google.com?q=${entry.data.pool.address}`}
                  target="_blank"
                  rel="noopener"><Icon name="map" />{entry.data.pool.address}</a
                >
              </li>
              {
                entry.data.pool.link.text !== "" ? (
                  <li>
                    <a href={entry.data.pool.link.url} target="_blank">
                      <Icon name="link" />
                      {entry.data.pool.link.text}
                    </a>
                  </li>
                ) : null
              }
            </ul>
          </div>
        </div>
      </div>
      <div class="container-fluid">
        <div class="single-pool__gallery">
          <div class="track">
            <ul class="track__list">
              {
                entry.data.pool.gallery.map(
                  (
                    image: {
                      webp: string | null | undefined;
                      jpg: string | null | undefined;
                    },
                    index: number
                  ) => {
                    return (
                      <li class="track__item" id={(index + 1).toString()}>
                        <picture class="container-item">
                          <source type="image/webp" srcset={image.webp} />
                          <img
                            loading="lazy"
                            src={image.jpg}
                            alt={entry.data.pool.image.alt}
                            height="576"
                            width="432"
                          />
                        </picture>
                      </li>
                    );
                  }
                )
              }
            </ul>
            <div class="track__indicators" aria-hidden="true">
              {
                entry.data.pool.gallery.map((_: any, index: number) => {
                  return <span class="indicator" />;
                })
              }
            </div>
          </div>
        </div>
      </div>
      <div class="container">
        <div class="related-pools">
          <Title animate level="5">
            Découvrez aussi nos autres bassins d'apprentissage
          </Title>
          <ul>
            {
              pools.map((item) => {
                if (item.name === entry.data.pool.name) {
                  return;
                } else {
                  return (
                    <li>
                      <a href={item.href}>
                        <img
                          loading="lazy"
                          src={item.thumb.jpg}
                          alt={item.thumb.alt}
                        />
                        {item.name}
                      </a>
                    </li>
                  );
                }
              })
            }
          </ul>
        </div>
      </div>
    </section>

    <Footer />
  </Main>

  <style lang="scss">
    .single-pool {
      &__content {
        display: grid;
        grid-template-columns: calc((100% * 2 / 5) - 2rem) calc(
            (100% * 3 / 5) - 2rem
          );
        gap: 4rem;
        align-items: center;
        padding-bottom: var(--space-lg);

        @media screen and (max-width: 992px) {
          grid-template-columns: calc(40% - 1rem) calc(60% - 1rem);
          gap: 2rem;
        }

        @media screen and (max-width: 768px) {
          grid-template-columns: 1fr;
          gap: 2rem;
        }
      }
      &__details {
        background-color: var(--color-bg-light);
        border-radius: var(--regular-border-radius);
        padding: var(--space-lg);
        box-shadow: 0 10px 15px -3px hsla(var(--link-color-secondary-hsl), 0.1),
          0 4px 6px -4px hsla(var(--link-color-secondary-hsl), 0.1);
        position: relative;
        display: flex;
        flex-direction: column;
        gap: var(--space-sm);

        * {
          margin: 0;
        }
        *a {
          color: var(--color-black);
        }

        &::after {
          content: "";
          position: absolute;
          top: 0;
          left: 0;
          width: 100%;
          height: 100%;
          border-radius: var(--regular-border-radius);
          background-image: url("/images/icons/event.svg");
          background-repeat: no-repeat;
          background-size: contain;
          background-position: bottom right;
          opacity: 0.05;
          z-index: -1;
        }
        h3 {
          font-size: var(--fs-md);
        }

        h4 {
          font-family: var(--ff-pacifico);
          font-size: var(--fs-sm);
        }

        ul {
          list-style: none;
          padding-left: var(--space-sm);
          display: block;

          @media screen and (max-width: 768px) {
            display: flex;
            flex-direction: column;
            align-items: flex-start;
          }
          & > li {
            display: flex;
            flex-wrap: nowrap;
            align-items: center;
            a {
              display: grid;
              grid-template-columns: 2rem 1fr;
              gap: var(--space-sm);
              // flex-wrap: nowrap;
              // align-items: center;
              // width: 100%;
              & > svg {
                width: 2rem;
                height: 2rem;
              }
            }
            //
          }
        }
      }
      &__gallery {
        picture {
          position: relative;
          display: block;
          height: 100%;
          border-radius: var(--regular-border-radius);
          overflow: hidden;
          box-shadow: 0 10px 15px -3px hsla(var(--link-color-primary-hsl), 0.1),
            0 4px 6px -4px hsla(var(--link-color-primary-hsl), 0.1);

          &:after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            border-radius: var(--regular-border-radius);
            overflow: hidden;
            background-image: linear-gradient(
              0deg,
              hsla(var(--link-color-primary-hsl), 1) 0%,
              hsla(var(--link-color-primary-hsl), 1) 7%,
              hsla(var(--link-color-white-hsl), 0) 36%
            );
            z-index: 1;
          }

          & > img {
            border-radius: var(--regular-border-radius);
            width: 100%;
            height: 100%;
            object-fit: cover;
            object-position: center;
          }
        }
      }
    }
    .related-pools {
      padding-top: 0;

      h5 {
        text-align: center;
        margin-block: var(--space-lg);
      }
      ul {
        padding: var(--space-md);
        display: flex;
        gap: var(--space-md);
        flex-wrap: wrap;
        max-width: 992px;
        justify-content: center;
        margin-inline: auto;
        & > li {
          list-style-type: none;
          background-color: var(--color-bg-light-alt);
          border-radius: var(--regular-border-radius);
          box-shadow: 0 10px 15px -3px hsla(var(--link-color-primary-hsl), 0.1),
            0 4px 6px -4px hsla(var(--link-color-primary-hsl), 0.1);
          transition: all 0.3s ease-in-out;
          flex-basis: calc(50% - var(--space-md));

          @media screen and (max-width: 767px) {
            flex-basis: 100%;
            max-width: 100%;
          }

          &:hover {
            transform: translateY(-0.5rem);
          }

          a:is(a, :hover, :focus, :active) {
            color: var(--color-primary);
            text-decoration: none;
            font-family: var(--ff-pacifico);
            display: block;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            padding-right: var(--space-xs);
          }

          img {
            width: 100px;
            height: 100px;
            border-radius: var(--regular-border-radius);
            margin-right: var(--space-md);
          }
        }
      }
    }

    :is(li, .indicator) {
      --h: 204;
      --s: 100%;
      --l: 49%;
    }

    .track {
      --card-width: 400px;
      --card-width: clamp(300px, 50vmin, 600px);

      width: 100vw;
      position: relative;
      left: 50%;
      right: 50%;
      margin-left: -50vw;
      margin-bottom: 6rem;

      ul {
        -ms-overflow-style: none; /* IE and Edge */
        scrollbar-width: none; /* Firefox */
        &::-webkit-scrollbar {
          display: none;
        }
        display: flex;
        gap: 2rem;
        padding: 0;
        margin: 0;
        padding-inline: calc(50vw - (var(--card-width) * 0.5));
        scroll-snap-type: x mandatory;
        max-width: 100%;
        list-style-type: none;
        overflow: auto;
        height: 100%;
        align-content: center;
        align-items: center;
        scroll-behavior: smooth;
        scroll-padding-inline: calc(50vw - (var(--card-width) * 0.5));
        -webkit-overflow-scrolling: touch;

        li {
          scroll-snap-align: center;
          padding: 0;
          margin: 0;

          picture {
            width: var(--card-width);
            aspect-ratio: 4 / 3;
          }
        }
      }

      &__indicators {
        height: 10px;
        position: absolute;
        top: calc(50% + ((var(--card-width) * (3 / 4)) * 0.5) + 2rem);
        left: 50%;
        translate: -50% 0;
        display: flex;
        gap: 4px;

        .indicator {
          --color: hsl(var(--h) var(--s) var(--l));
          background: linear-gradient(var(--color), var(--color)) padding-box;
          flex: 1;
          border-radius: 100px;
          height: 100%;
          min-width: 12px;
          padding: 0;
          position: relative;

          &::after {
            content: "";
            border-radius: 100px;
            position: absolute;
            inset: 0;
            background: hsl(
              calc(var(--h) + 3),
              calc(var(--s) - 3%),
              calc(var(--l) - 36%)
            );
          }
        }
      }
    }

    @supports (animation-timeline: scroll()) {
      .track {
        timeline-scope: --one, --two, --three, --four, --five;

        &__indicators {
          aspect-ratio: 7 / 1;

          .indicator {
            --buffer: calc(var(--card-width) * 0.9);
            animation: blink both linear;
            animation-range: contain calc(50% - var(--buffer)) contain
              calc(50% + var(--buffer));

            &:nth-of-type(1) {
              animation-timeline: --one;

              &::after {
                animation-timeline: --one;
              }
            }
            &:nth-of-type(2) {
              animation-timeline: --two;

              &::after {
                animation-timeline: --two;
              }
            }
            &:nth-of-type(3) {
              animation-timeline: --three;

              &::after {
                animation-timeline: --three;
              }
            }
            &:nth-of-type(4) {
              animation-timeline: --four;

              &::after {
                animation-timeline: --four;
              }
            }
            &:nth-of-type(5) {
              animation-timeline: --five;

              &::after {
                animation-timeline: --five;
              }
            }
            &::after {
              --buffer: calc(var(--card-width) * 0.9);
              opacity: 0;
              animation: show both linear;
              animation-range: contain calc(50% - var(--buffer)) contain
                calc(50% + var(--buffer));
            }
          }
        }
        li {
          &:nth-of-type(1) {
            view-timeline: --one inline;
          }
          &:nth-of-type(2) {
            view-timeline: --two inline;
          }
          &:nth-of-type(3) {
            view-timeline: --three inline;
          }
          &:nth-of-type(4) {
            view-timeline: --four inline;
          }
          &:nth-of-type(5) {
            view-timeline: --five inline;
          }
        }
      }

      @keyframes blink {
        50% {
          flex: 3;
        }
      }
      @keyframes show {
        50% {
          opacity: 1;
        }
      }
    }
  </style>
</PoolLayout>
