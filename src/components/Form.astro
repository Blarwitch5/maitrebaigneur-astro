---
import Buttons from "./ui/Buttons.astro";
import { Icon } from "astro-icon";
import site from "@assets/data/data.json";
import Title from "./ui/Title.astro";

const { siteLinks, swimmingLevels } = site;
const pools = siteLinks.pools;
const levels = swimmingLevels;

const google_site_key = import.meta.env.GOOGLE_SITE_KEY;
---

<form
  id="form"
  class="form"
  action="https://getform.io/f/07ac1ebb-9a09-434c-a1ae-a86c55824ca5"
  method="POST"
>
  <fieldset class="form__group">
    <legend>En quoi pouvons-nous vous aider ?</legend>
    <div class="radio__group">
      <div class="form__field">
        <label for="choice6" class="card card-swimming">
          <input
            type="radio"
            autocomplete="off"
            name="choice"
            value="leçons de natation en station"
            id="choice6"
            class="radio"
            data-option="lecons-de-natation-en-station"
          />
          <span class="sr-only"
            >Leçons de natation en bassin d'apprentissage</span
          >
          <span class="card__title" aria-hidden="true"
            >Leçons de natation en bassin d'apprentissage</span
          >
        </label>
      </div>
      <div class="form__field">
        <label for="choice5" class="card card-baby">
          <input
            type="radio"
            autocomplete="off"
            name="choice"
            value="cours de bébé nageur"
            id="choice5"
            class="radio"
            data-option="cours-de-bebe-nageur"
          />
          <span class="sr-only">Cours de bébé nageur</span>
          <span class="card__title" aria-hidden="true"
            >Cours de bébé nageur</span
          >
        </label>
      </div>

      <div class="form__field">
        <label for="choice1" class="card card-swimming">
          <input
            type="radio"
            autocomplete="off"
            name="choice"
            data-option="lecons-de-natation-a-domicile"
            value="leçons de natation à domicile"
            id="choice1"
            class="radio"
          />
          <span class="sr-only">Leçons de natation à domicile</span>
          <span class="card__title" aria-hidden="true"
            >Leçons de natation à domicile</span
          >
        </label>
      </div>
      <div class="form__field">
        <label for="choice3" class="card card-events">
          <input
            type="radio"
            autocomplete="off"
            name="choice"
            value="sécuriser un événement"
            id="choice3"
            class="radio"
            data-option="securiser-un-evenement"
          />
          <span class="sr-only">Sécuriser un événement</span>
          <span class="card__title" aria-hidden="true"
            >Sécurité d'un événement</span
          >
        </label>
      </div>
      <div class="form__field">
        <label for="choice2" class="card card-aquaversary">
          <input
            type="radio"
            autocomplete="off"
            name="choice"
            value="organiser un aquaversaire"
            id="choice2"
            class="radio"
            data-option="organiser-un-aquaversaire"
          />
          <span class="sr-only">Organisation d'un aquaversaire</span>
          <span class="card__title" aria-hidden="true"
            >Organisation d'un aquaversaire</span
          >
        </label>
      </div>

      <div class="form__field">
        <label for="choice4" class="card card-questions">
          <input
            type="radio"
            autocomplete="off"
            name="choice"
            value="autres questions ou suggestions"
            id="choice4"
            class="radio"
            data-option="autres-questions-ou-suggestions"
          />
          <span class="sr-only">Autres questions ou suggestions</span>
          <span class="card__title" aria-hidden="true"
            >Autres questions ou suggestions</span
          >
        </label>
      </div>
    </div>
  </fieldset>

  <!-- 1rst section - swimming lessons -->
  <fieldset class="form__section" id="swimming-lessons">
    <legend>Contact pour leçons de natation à domicile</legend>
    <div class="form__field col-100">
      <label for="nom-natation-domicile"
        >Nom d'un des parents <span class="required">*</span></label
      >
      <input type="text" name="nom-natation-domicile" />
    </div>
    <div class="form__field col-100">
      <label for="nom-enfants-natation-domicile"
        >Prénoms du ou des enfants <span class="required">*</span></label
      >
      <input type="text" name="nom-enfants-natation-domicile" />
      <small
        >Dans le cas de plusieurs enfants, séparer les prénoms par une virgule</small
      >
    </div>
    <div class="form__field">
      <label for="tel-natation-domicile"
        >Numéro de téléphone <span class="required">*</span></label
      >
      <input type="tel" name="tel-natation-domicile" />
    </div>
    <div class="form__field">
      <label for="email-natation-domicile"
        >Adresse mail <span class="required">*</span></label
      >
      <input type="email" name="email-natation-domicile" />
    </div>
    <div class="form__field col-100">
      <label for="adresse-natation-domicile"
        >Adresse de la piscine <span class="required">*</span></label
      >
      <input type="text" name="adresse-natation-domicile" />
    </div>
    <div class="form__field col-50">
      <label for="code-postal-natation-domicile"
        >Code postal <span class="required">*</span></label
      >
      <input
        type="text"
        pattern="\d{5}"
        title="Code postal français à 5 chiffres"
        name="code-postal-natation-domicile"
      />
    </div>
    <div class="form__field col-50">
      <label for="ville-natation-domicile"
        >Ville <span class="required">*</span></label
      >
      <input type="text" name="ville-natation-domicile" />
    </div>
    <div class="form__field col-100">
      <label for="dates-natation-domicile"
        >Quand vodriez-vous réserver un cours ? <span class="required">*</span
        ></label
      >
      <textarea name="dates-natation-domicile" rows="3"></textarea>
      <small>Veuillez nous fournir plusieurs dates et heures</small>
    </div>

    <p class="col-100">
      Nous ne garantissons pas la réservation de vos créneaux mais nous ferons
      de notre mieux pour vous répondre favorablement.
    </p>

    <div class="col-100">
      <Title level="3">Aide à l'évaluation du niveau du baigneur</Title>
      <ul class="levels">
        {
          levels.map((level) => (
            <li>
              <span>{level.name}</span>
              <p set:html={level.desc} />
              <ul class="hints">
                {level.hints.map((hint) => (
                  <li class="hint">{hint}</li>
                ))}
              </ul>
            </li>
          ))
        }
      </ul>
    </div>
  </fieldset>

  <!-- 2nd section - aquaversary -->
  <fieldset class="form__section" id="aquaversary">
    <legend>Contact pour un Aquaversaire</legend>
    <div class="form__field">
      <label for="nom-aquaversaire">Nom <span class="required">*</span></label>
      <input type="text" nom-aquaversaire="name" />
    </div>
    <div class="form__field">
      <label for="prenom-aquaversaire"
        >Prénom <span class="required">*</span></label
      >
      <input type="text" name="prenom-aquaversaire" />
    </div>
    <div class="form__field">
      <label for="tel-aquaversaire"
        >Numéro de téléphone <span class="required">*</span></label
      >
      <input type="tel" name="tel-aquaversaire" />
    </div>
    <div class="form__field">
      <label for="email-aquaversaire"
        >Adresse mail <span class="required">*</span></label
      >
      <input type="email" name="email-aquaversaire" />
    </div>
    <div class="form__field col-100">
      <label for="info-aquaversaire"
        >Où ? Quand ? Et combien de baigneurs <span class="required">*</span
        ></label
      >
      <textarea name="info-aquaversaire" rows="3"></textarea>
      <small
        >Exemple: Je souhaite organiser un aquaversaire à Aix le 01/01/23 pour
        10 enfants...</small
      >
    </div>
  </fieldset>

  <!-- 3rd section - events -->
  <fieldset class="form__section" id="events">
    <legend>Contact pour de la surveillance</legend>
    <div class="form__field">
      <label for="name-surveillance">Nom <span class="required">*</span></label>
      <input type="text" name="name-surveillance" />
    </div>
    <div class="form__field">
      <label for="prenom-surveillance"
        >Prénom <span class="required">*</span></label
      >
      <input type="text" name="prenom-surveillance" />
    </div>
    <div class="form__field">
      <label for="tel-surveillance"
        >Numéro de téléphone <span class="required">*</span></label
      >
      <input type="tel" name="tel-surveillance" />
    </div>
    <div class="form__field">
      <label for="email-surveillance"
        >Adresse mail <span class="required">*</span></label
      >
      <input type="email" name="email-surveillance" />
    </div>
    <div class="form__field col-100">
      <label for="info-surveillance"
        >Où ? Quand ? Et combien de personnes ? Quel type d'événement ?</label
      >
      <textarea name="info-surveillance" rows="3"></textarea>
      <small
        >Exemple: Je souhaite sécuriser un mariage à Aix le 01/01/23 pour 50
        personnes...</small
      >
    </div>
  </fieldset>

  <!-- 4th section - questions -->
  <fieldset class="form__section" id="questions">
    <legend>Autres questions et suggestions</legend>

    <div class="form__field">
      <label for="name-autre">Nom <span class="required">*</span></label>
      <input type="text" name="name-autre" />
    </div>
    <div class="form__field">
      <label for="prenom-autre">Prénom <span class="required">*</span></label>
      <input type="text" name="prenom-autre" />
    </div>
    <div class="form__field">
      <label for="tel-autre"
        >Numéro de téléphone <span class="required">*</span></label
      >
      <input type="tel" name="tel-autre" />
    </div>
    <div class="form__field">
      <label for="email-autre"
        >Adresse mail <span class="required">*</span></label
      >
      <input type="email" name="email-autre" />
    </div>
    <div class="form__field col-100">
      <label for="info-autre">Message <span class="required">*</span></label>
      <textarea name="info-autre" rows="3"></textarea>
    </div>
  </fieldset>
  <!-- 5th section - Baby swimmers -->
  <fieldset class="form__section no-inputs" id="baby">
    <legend>Cours bébé nageur</legend>

    <p>
      Pour vous inscrire aux cours de bébé nageur, utilisez notre nouveau
      système de réservation en ligne.
    </p>
    <Buttons
      href="https://user.clicrdv.com/maitre-baigneur"
      class="btn btn__regular"
      newTab
    >
      <Icon name="calendar" /> Je réserve maintenant
    </Buttons>
  </fieldset>
  <!-- 6th section - Swimming in station -->
  <fieldset class="form__section no-inputs" id="swimming-station">
    <legend>Cours de natation en bassin d'apprentissage</legend>

    <p>
      Pour vous inscrire aux cours de natation dans un de <a href="/bassins"
        >nos bassins d'apprentissage</a
      >, utilisez notre nouveau système de réservation en ligne.
    </p>
    <Buttons
      href="https://user.clicrdv.com/maitre-baigneur"
      class="btn btn__regular"
      newTab
    >
      <Icon name="calendar" /> Je réserve maintenant
    </Buttons>
    <div class="pools">
      <Title level="3">Nos bassins d'apprentissage</Title>
      <ul>
        {
          pools.map((item) => {
            return (
              <li>
                <a href={item.href}>
                  <img
                    loading="lazy"
                    src={item.thumb.jpg}
                    alt={item.thumb.alt}
                  />
                  <span>{item.name}</span>
                </a>
              </li>
            );
          })
        }
      </ul>
    </div>
  </fieldset>

  <!-- RGDP -->
  <fieldset class="form__section rgpd" id="rgpd-section">
    <div class="form__field col-100">
      <input type="checkbox" name="rgpd" id="rgpd" required />
      <label for="rgpd" class="rgpd-label"
        >En soumettant ce formulaire, j'accepte que les informations saisies
        dans ce formulaire soient utilisées pour permettre de me recontacter.
      </label>
    </div>

    <!-- add hidden Honeypot input to prevent spams -->
    <!-- <input type="hidden" name="_gotcha" style="display:none !important" /> -->

    <!-- submit button -->
    <Buttons type="submit" class="btn btn__regular">Envoyer</Buttons>
  </fieldset>
</form>

<style lang="scss">
  .required {
    color: var(--color-error);
  }
  .form {
    //form variables
    --card-line-height: 1.2em;
    --card-padding: var(--space-md);
    --card-radius: 20px;
    --color-gray: #e2ebf6;
    --color-dark-gray: #c4d1e1;
    --radio-border-width: 2px;
    --radio-size: var(--space-md);
    --form-gap: var(--space-xs);

    max-width: 1024px;
    margin: auto;
    display: grid;
    grid-gap: var(--form-gap);
    padding-block: 2rem;

    legend {
      padding-inline: 1rem;
      font-family: var(--ff-pacifico);
      color: var(--color-primary);
      font-size: var(--fs-lg);
    }
    &__group {
      border: none;
      padding: 0;
    }

    &__group .radio__group,
    &__section {
      padding: var(--form-gap);
      display: grid;
      grid-gap: var(--form-gap);
      border: none;
      border-radius: var(--regular-border-radius);
      grid-template-columns: 1fr;

      @media screen and (min-width: 576px) {
        grid-template-columns: repeat(2, minmax(0, 1fr));
      }
      @media screen and (min-width: 992px) {
        grid-template-columns: repeat(3, minmax(0, 1fr));
      }

      & > .form__field {
        margin: 0;
        display: flex;
        gap: 0.3rem;
        flex-direction: column;
        grid-column: 1 / 3;

        @media screen and (min-width: 600px) {
          grid-column: unset;
        }
      }
      *.col-100 {
        grid-column: 1 / 3;
      }

      input:not([name="choice"]),
      textarea {
        background-color: var(--color-white);
        border-radius: var(--regular-border-radius);
        padding: 0.5rem;
        border: var(--radio-border-width) solid var(--color-gray);

        &:hover {
          border-color: var(--color-dark-gray);
        }
        &:focus {
          outline: 2px solid var(--color-primary);
          box-shadow: 1px 1px 8px 1px hsla(var(--link-color-primary-hsl), 0.5);
        }
      }
    }
    &__section {
      grid-template-columns: repeat(2, minmax(0, 1fr));

      &.no-inputs {
        display: flex;
        flex-direction: column;
        gap: var(--space-md);

        & > * {
          margin: 0;
        }

        // pool list
        ul {
          display: flex;
          flex-wrap: wrap;
          gap: var(--space-2xs);
          padding-left: var(--space-sm);

          & > li {
            list-style-type: none;
            border-radius: var(--regular-border-radius);
            transition: all 0.3s ease-in-out;
            flex-basis: calc(50% - var(--space-md));
            transition: all 0.3s ease-in-out;

            &:hover {
              transform: translateX(1rem);
            }

            @media screen and (max-width: 767px) {
              flex-basis: calc(100% - var(--space-md));
            }

            & > a span {
            }

            a:is(a, :hover, :focus, :active) {
              color: var(--color-primary);
              text-decoration: none;
              font-family: var(--ff-pacifico);
              display: flex;
              align-items: center;
            }

            img {
              width: 3rem;
              height: 3rem;
              border-radius: var(--regular-border-radius);
              margin-right: var(--space-sm);
            }
          }
        }
        .pools {
          padding: var(--space-md);
          background-color: var(--color-bg-light);
          border-radius: var(--regular-border-radius);

          @media screen and (max-width: 768px) {
            padding-inline: var(--space-xs);
          }
        }

        //booking btn
        .btn {
          svg {
            width: 2rem;
            margin-right: var(--space-xs);
          }
        }
      }
      .levels {
        display: grid;
        grid-template-columns: repeat(2, 1fr);
        grid-gap: var(--space-md);
        list-style-type: none;
        padding: 0;

        @media screen and (max-width: 768px) {
          grid-template-columns: 1fr;
        }
        & > li {
          background-color: var(--color-bg-light-alt);
          padding: var(--space-sm);
          border-radius: var(--regular-border-radius);

          & > span {
            font-family: var(--ff-pacifico);
            font-size: var(--fs-xs);
            font-weight: 600;
            color: var(--color-primary);
          }
          ul {
            font-style: italic;
            list-style-type: none;
            padding-left: var(--space-xs);
            display: flex;
            flex-direction: column;
            gap: var(--space-2xs);

            li {
              background-color: var(--color-white);
              padding-inline: var(--space-sm);
              border-radius: var(--border-radius);
            }
          }
        }
      }

      label {
        height: auto;
      }
      &.rgpd {
        .form__field {
          flex-direction: row;
          flex-wrap: nowrap;
          gap: var(--space-sm);
        }
        input[type="checkbox"] {
          &[name="rgpd"] {
            accent-color: var(--color-primary);
            width: 1.5rem;
            height: 1.5rem;
            border-radius: var(--small-border-radius);
          }
        }
      }
    }

    label {
      display: block;
      height: 100%;

      &:not(.card, .rgpd-label) {
        padding-left: var(--space-xs);
        font-size: 1rem;
        font-weight: 600;
        color: var(--color-secondary);
        height: unset;
      }
    }

    small {
      color: hsla(var(--link-color-black-hsl), 0.5);
      padding-left: var(--space-xs);
    }
    //buttons cards style
    .card {
      background-color: var(--color-white);
      border-radius: var(--card-radius);
      position: relative;
      overflow: hidden;

      &::before {
        content: "";
        position: absolute;
        width: 200%;
        height: 200%;
        z-index: 1;
        top: 50%;
        left: -1rem;
        transform: translateY(-50%);
        opacity: 0.05;
        background-repeat: no-repeat;
        background-position: left;
        background-size: contain;
      }

      &:hover {
        box-shadow: 0 10px 15px -3px hsla(var(--link-color-primary-hsl), 0.3),
          0 4px 6px -4px hsla(var(--link-color-primary-hsl), 0.3);
      }

      &.card-swimming {
        &::before {
          background-image: url("/images/icons/swimmer.svg");
        }
      }
      &.card-aquaversary {
        &::before {
          background-image: url("/images/icons/aquaversaire.svg");
        }
      }
      &.card-events {
        &::before {
          background-image: url("/images/icons/event.svg");
        }
      }
      &.card-questions {
        &::before {
          background-image: url("/images/icons/comment-smile.svg");
        }
      }
      &.card-baby {
        &::before {
          background-image: url("/images/icons/baby.svg");
        }
      }
    }

    .radio {
      font-size: inherit;
      margin: 0;
      position: absolute;
      right: calc(var(--card-padding) + var(--radio-border-width));
      top: calc(var(--card-padding) + var(--radio-border-width));

      &:checked {
        & ~ .card__title {
          border-color: var(--color-primary);
        }
      }
      &:focus {
        & ~ .card__title {
          box-shadow: 0 0 0 2px var(--color-dark-gray);
        }
      }
      &:disabled {
        & ~ .card__title {
          color: var(--color-dark-gray);
        }
      }
    }

    @supports (-webkit-appearance: none) or (-moz-appearance: none) {
      .radio {
        -webkit-appearance: none;
        -moz-appearance: none;
        background: #fff;
        border: var(--radio-border-width) solid var(--color-gray);
        border-radius: 50%;
        cursor: pointer;
        height: var(--radio-size);
        outline: none;
        transition: background 0.2s ease-out, border-color 0.2s ease-out;
        width: var(--radio-size);

        &::after {
          border: var(--radio-border-width) solid #fff;
          border-top: 0;
          border-left: 0;
          content: "";
          display: block;
          height: 0.75rem;
          left: 25%;
          position: absolute;
          top: 50%;
          transform: rotate(45deg) translate(-50%, -50%);
          width: 0.375rem;
        }

        &:checked {
          background: var(--color-primary);
          border-color: var(--color-primary);
        }
      }

      .card:hover .radio {
        border-color: var(--color-dark-gray);

        &:checked {
          border-color: var(--color-primary);
        }
      }
    }

    .card__title {
      height: 100%;
      border: var(--radio-border-width) solid var(--color-gray);
      border-radius: var(--card-radius);
      cursor: pointer;
      display: flex;
      flex-direction: column;
      padding-block: var(--card-padding);
      padding-inline: var(--card-padding) 4.5rem;
      transition: border-color 0.2s ease-out;
    }

    .card {
      &:hover {
        .card__title {
          border-color: var(--color-dark-gray);
        }
        .radio {
          &:disabled {
            & ~ .card__title {
              border-color: var(--color-gray);
              box-shadow: none;
            }
          }
        }
      }
    }

    button[type="submit"] {
      margin-top: var(--space-md);
    }
  }
</style>

<script>
  // Define the section map
  const sectionMap: { [title: string]: HTMLElement } = {
    "leçons de natation à domicile":
      document.getElementById("swimming-lessons")!,
    "organiser un aquaversaire": document.getElementById("aquaversary")!,
    "sécuriser un événement": document.getElementById("events")!,
    "autres questions ou suggestions": document.getElementById("questions")!,
    "cours de bébé nageur": document.getElementById("baby")!,
    "leçons de natation en station":
      document.getElementById("swimming-station")!,
  };

  // Hide all form sections except the default one
  const formSections = Array.from(
    document.getElementsByClassName("form__section")
  ) as HTMLElement[];
  formSections.forEach((formSection: HTMLElement) => {
    formSection.style.display = "none";
    Array.from(formSection.getElementsByTagName("input")).forEach(
      (input: HTMLInputElement) => {
        input.required = false; // Make inputs not required when the section is hidden
      }
    );
  });

  // Display form section based on URL parameter, if present
  const urlParams = new URLSearchParams(window.location.search);
  const option = urlParams.get("option");
  if (option) {
    const normalizedOption = removeAccents(option)
      .toLowerCase()
      .replace(/\s+/g, "-");
    const section = Object.keys(sectionMap).find(
      (title) =>
        removeAccents(title).toLowerCase().replace(/\s+/g, "-") ===
        normalizedOption
    );
    if (section) {
      sectionMap[section].style.display = sectionMap[
        section
      ].classList.contains("no-inputs")
        ? "flex"
        : "grid";
      const matchingButton = document.querySelector(
        `input[type='radio'][name='choice'][data-option='${normalizedOption}']`
      ) as HTMLInputElement;
      if (matchingButton) {
        matchingButton.checked = true;
        console.log(matchingButton.checked);
      }
    }
  }

  // Add event listeners to the radio buttons
  const radioButtons = document.querySelectorAll(
    "input[type='radio'][name='choice']"
  );
  radioButtons.forEach((button: Element) => {
    button.addEventListener("click", () => {
      const section = sectionMap[(button as HTMLInputElement).value];
      formSections.forEach((formSection: HTMLElement) => {
        if (formSection === section) {
          formSection.style.display = formSection.classList.contains(
            "no-inputs"
          )
            ? "flex"
            : "grid";
          Array.from(formSection.getElementsByTagName("input")).forEach(
            (input: HTMLInputElement) => {
              input.required = true; // Make inputs required when the section is shown
            }
          );
        } else {
          formSection.style.display = "none";
          Array.from(formSection.getElementsByTagName("input")).forEach(
            (input: HTMLInputElement) => {
              input.required = false; // Make inputs not required when the section is hidden
            }
          );
        }
      });
      document.getElementById("rgpd-section")!.style.display =
        section && !section.classList.contains("no-inputs") ? "block" : "none";
      const normalizedOption = removeAccents(
        (button as HTMLInputElement).getAttribute("data-option") || ""
      )
        .toLowerCase()
        .replace(/\s+/g, "-");
      urlParams.set("option", normalizedOption);
      window.history.replaceState(
        {},
        "",
        window.location.pathname + "?" + urlParams.toString()
      );
    });
  });

  // Hide all form sections and deselect radio buttons if the URL is just /contact
  if (window.location.pathname === "/contact.html") {
    formSections.forEach((formSection: HTMLElement) => {
      formSection.style.display = "none";
      Array.from(formSection.getElementsByTagName("input")).forEach(
        (input: HTMLInputElement) => {
          input.required = false; // Make inputs not required when the section is hidden
        }
      );
    });
    radioButtons.forEach((button: Element) => {
      (button as HTMLInputElement).checked = false;
    });
    document.getElementById("rgpd-section")!.style.display = "none";
  }

  // Function to remove accents from a string
  function removeAccents(str: string): string {
    const accentsMap: { [char: string]: string } = {
      à: "a",
      á: "a",
      â: "a",
      ä: "a",
      ã: "a",
      å: "a",
      ç: "c",
      è: "e",
      é: "e",
      ê: "e",
      ë: "e",
      ì: "i",
      í: "i",
      î: "i",
      ï: "i",
      ñ: "n",
      ò: "o",
      ó: "o",
      ô: "o",
      ö: "o",
      õ: "o",
      ø: "o",
      ù: "u",
      ú: "u",
      û: "u",
      ü: "u",
      ý: "y",
      ÿ: "y",
      æ: "ae",
      œ: "oe",
    };
    return str
      .toLowerCase()
      .replace(/[àáâäãåçèéêëìíîïñòóôöõøùúûüýÿæœ]/g, (char) => accentsMap[char]);
  }
</script>
