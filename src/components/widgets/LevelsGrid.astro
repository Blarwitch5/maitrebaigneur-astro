---
import site from "@assets/data/data.json";
import Title from "@components/ui/Title.astro";

const { swimmingLevels } = site;
const levels = swimmingLevels;
---

<div class="levels__grid">
  {
    levels.map((level) => (
      <div
        class="level panel"
        style={`background-image:linear-gradient(0deg, hsla(var(--link-color-primary-hsl), 1) 0%,	hsla(var(--link-color-primary-hsl), 1) 7%, hsla(var(--link-color-white-hsl), 0) 75%), url(${level.imageSrc.jpg});background-image: linear-gradient(0deg,hsla(var(--link-color-primary-hsl), 1) 0%,hsla(var(--link-color-primary-hsl), 1) 7%, hsla(var(--link-color-white-hsl), 0) 75%), url(${level.imageSrc.webp});`}
      >
        <p class="vertical-txt">{level.name}</p>
        <div class="level__content details">
          <Title level="3" class="level__title">
            {level.name}
          </Title>
          <p class="level__desc" set:html={level.desc} />
          <ul class="hints">
            {level.hints.map((hint) => (
              <li class="hint">{hint}</li>
            ))}
          </ul>
        </div>
      </div>
    ))
  }
</div>

<style lang="scss">
  .levels__grid {
    display: flex;
    width: 100%;

    @media (max-width: 992px) {
      display: flex;
      flex-direction: column;
      height: 100vh;
    }
  }

  .level {
    background-size: cover;
    background-position: center;
    background-repeat: no-repeat;
    height: 600px;
    border-radius: var(--regular-border-radius);
    color: #fff;
    cursor: pointer;
    flex: 0.5;
    margin: 10px;
    position: relative;
    transition: flex 0.7s ease-in, filter 0.7s ease-in;
    display: flex;
    flex-direction: column;
    filter: grayscale(0.75);
    box-shadow: 0 10px 15px -3px hsla(var(--link-color-primary-hsl), 0.3),
      0 4px 6px -4px hsla(var(--link-color-primary-hsl), 0.3);

    .vertical-txt {
      font-weight: bold;
      white-space: nowrap;
      position: absolute;
      z-index: 30;
      opacity: 1;
      transition: top 0.35s, opacity 0.3s ease-in 0.5s;
      transform-origin: 0 0;
      font-size: 1.5rem;
      font-family: var(--ff-pacifico);
      letter-spacing: 2px;
      margin: 0;

      top: calc(100% - 2rem);
      left: 50%;
      transform: translate(-20px, -50%) rotate(-90deg);

      @media only screen and (max-width: 992px) {
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%) rotate(0deg);
      }
    }

    &__content {
      position: absolute;
      bottom: var(--space-md);
      left: var(--space-md);
      right: var(--space-md);
      visibility: hidden;
      display: flex;
      flex-direction: column;
      gap: 1rem;
      max-height: 100%;
      align-items: flex-start;
      justify-content: flex-end;
      height: calc(100% - 2 * var(--space-md));

      @media (max-width: 992px) {
        bottom: var(--space-sm);
        left: var(--space-sm);
        right: var(--space-sm);
      }
      @media (max-width: 576px) {
        bottom: var(--space-2xs);
        left: var(--space-2xs);
        right: var(--space-2xs);
      }
    }
    &__title {
      font-size: 24px;
      opacity: 0;
      color: var(--color-white);
      font-family: var(--ff-pacifico);
      font-size: var(--fs-lg);
      margin: 0;
      display: flex;
      flex-grow: 1;
    }
    &__desc {
      font-size: var(--fs-base);
      opacity: 0;
      margin: 0;
    }
    .hints {
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
      padding: 0;
      .hint {
        list-style: none;
        padding: 0.2rem 2rem;
        margin: 0;
        background-color: hsla(var(--link-color-white-hsl), 0.2);
        border-radius: var(--border-radius);
        width: fit-content;
        opacity: 0;
      }
    }

    //open tab
    &.active {
      flex: 5;
      filter: grayscale(0);

      .vertical-txt {
        opacity: 0;
        top: 200%;
      }

      .level__content {
        transition: visibility 0.3s ease-in 0.4s;
        visibility: visible;
      }
      .level__title {
        opacity: 1;
        transition: opacity 0.3s ease-in 0.7s;
      }
      .level__desc {
        opacity: 1;
        transition: opacity 0.3s ease-in 0.8s;
      }
      .hint {
        transition: opacity 0.3s ease-in 0.9s;
        opacity: 1;
      }
    }
  }
</style>
<script>
  const levels = document.querySelectorAll(".level");
  levels[0].classList.add("active");

  levels.forEach((level) => {
    level.addEventListener("click", () => {
      removeActiveClasses(); // Add fuctions to remove active class first
      level.classList.add("active");
    });
  });

  function removeActiveClasses() {
    levels.forEach((level) => {
      level.classList.remove("active");
    });
  }
</script>
