<div class="accordion">
	<ul class="accordion-wrapper">
		<slot />
	</ul>
</div>

<script type="module">
	const accordionItems = [...document.querySelectorAll(".accordion-item")];
	const getPanelHeight = (accordionItem) => {
		const accordionInner = accordionItem.querySelector(".panel-inner");
		return accordionInner.getBoundingClientRect().height;
	};
	const openAccordionItem = (accordionItem) => {
		const accordionItemHeader = accordionItem.querySelector(".accordion-header");
		const accordionPanel = accordionItem.querySelector(".accordion-panel");
		accordionPanel.style.height = `${getPanelHeight(accordionItem)}px`;
		accordionItem.classList.add("is-active");
		accordionItemHeader.setAttribute("aria-expanded", true);
	};
	const closeAccordionItem = (accordionItem) => {
		const accordionItemHeader = accordionItem.querySelector(".accordion-header");
		const accordionPanel = accordionItem.querySelector(".accordion-panel");
		accordionItem.classList.remove("is-active");
		accordionPanel.style.height = 0;
		accordionItemHeader.focus();
		accordionItemHeader.setAttribute("aria-expanded", false);
	};
	const isAccordionOpen = (accordionItem) => {
		return accordionItem.classList.contains("is-active");
	};
	function toggleAccordionItem() {
		const accordionItem = event.target.closest(".accordion-item");
		if (!accordionItem || event.target.closest(".accordion-panel")) return;
		isAccordionOpen(accordionItem) ? closeAccordionItem(accordionItem) : openAccordionItem(accordionItem);
	}
	function recalculateHeight() {
		const toggledAccordionItems = accordionItems.filter((element) => element.classList.contains("is-active"));
		toggledAccordionItems.forEach((toggledAccordionItem) => {
			const accordionPanel = toggledAccordionItem.querySelector(".accordion-panel");
			accordionPanel.style.height = `${getPanelHeight(toggledAccordionItem)}px`;
		});
	}
	accordionItems.forEach((item, index) => {
		const accordionItemHeader = item.querySelector(".accordion-header");
		const accordionItemPanel = item.querySelector(".accordion-panel");
		accordionItemHeader.setAttribute("id", `accordion-item${index + 1}`);
		accordionItemPanel.setAttribute("id", `item${index + 1}`);
		accordionItemHeader.setAttribute("aria-controls", `item${index + 1}`);
		accordionItemPanel.setAttribute("aria-labelledby", `accordion-item${index + 1}`);
	});
	document.addEventListener("keydown", (event) => {
		const accordionItem = event.target.closest(".accordion-item");
		if (event.key !== "Escape") return;
		if (!accordionItem) return;
		if (isAccordionOpen(accordionItem)) {
			closeAccordionItem(accordionItem);
		}
	});
	document.addEventListener("keydown", (event) => {
		if (!event.target.closest(".accordion-header")) return;
		const accordionWrapper = event.target.closest(".accordion-wrapper");
		const accordionItem = event.target.closest(".accordion-item");
		const accordionItems = [...accordionWrapper.querySelectorAll(".accordion-item")];
		const index = accordionItems.findIndex((element) => element === accordionItem);
		const { key } = event;
		let targetItem;
		if (key === "ArrowDown") {
			targetItem = accordionItems[index + 1];
		}
		if (key === "ArrowUp") {
			targetItem = accordionItems[index - 1];
		}
		if (targetItem) {
			event.preventDefault();
			targetItem.querySelector(".accordion-header").focus();
		}
	});
	window.toggleAccordionItem = toggleAccordionItem;
	window.onresize = recalculateHeight;
</script>

<style lang="scss">
	.accordion-wrapper {
		list-style: none;
		padding-inline: 0;
		padding-block: 1rem;
	}
</style>
