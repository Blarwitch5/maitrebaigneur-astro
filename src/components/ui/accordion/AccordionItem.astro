---
const { header } = Astro.props;
---

<li class="accordion-item">
	<h3 class="accordion-title">
		<button id="accordion-header-1" class="accordion-header" aria-expanded="false" aria-controls="accordion-panel-1" onclick="toggleAccordionItem()">
			{header}
			<svg xmlns="http://www.w3.org/2000/svg" class="accordion-toggle" fill="none" viewBox="0 0 32 32">
				<path
					stroke="currentColor"
					stroke-linecap="round"
					stroke-linejoin="round"
					stroke-width="1.5"
					d="m21.038 14.419-3.82 5.053a1.256 1.256 0 0 1-2.047 0l-4.178-5.053a1.49 1.49 0 0 1 1.024-2.413h8a1.49 1.49 0 0 1 1.021 2.413Z"
					clip-rule="evenodd"></path>
			</svg>
		</button>
	</h3>
	<div id="accordion-panel-1" role="region" class="accordion-panel" aria-labelledby="accordion-header-1">
		<div class="panel-inner">
			<slot />
		</div>
	</div>
</li>
<hr />

<style lang="scss" is:global>
	.accordion-item,
	.accordion-header,
	hr {
		width: 100%;
		max-width: 800px;
		margin: auto;
	}
	.accordion-title {
		margin-block: 2rem;
	}
	.accordion-header {
		display: flex;
		justify-content: space-between;
		align-items: center;

		border: 0;
		background-color: transparent;
		font-size: 1.5rem;
		font-family: var(--ff-pacifico);
		font-weight: 600;
		color: var(--color-primary);

		&:focus {
			border: 0;
			background-color: transparent;
		}

		&[aria-expanded="true"] {
			.accordion-toggle {
				transform: rotate(180deg);
			}
		}
	}

	.accordion-toggle {
		width: 2rem;
		transition: transform 0.3s ease-in-out;
	}
	.accordion-panel {
		visibility: hidden;
		overflow: hidden;
		height: 0;

		transition: height 0.3s ease-in-out, visibility 0s 0.3s;
	}
	.panel-inner {
		padding: 0 1rem 1.5rem 1rem;
	}
	.is-active {
		.accordion-panel {
			visibility: visible;
			height: auto;
			transition: height 0.3s ease-in-out, visibility 0s 0s;
		}
	}
	hr {
		border-top: 1px solid hsl(var(--link-color-txt-hsl), 0.1);
		border-left: none;
		border-right: none;
		border-bottom: none;

		&:last-of-type {
			display: none;
		}
	}
</style>
